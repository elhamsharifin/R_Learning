b <- 0 #score of incorrect
E_new <- p*a + (1-p)*b
E_new
### expected value score of gussing new exam?
p <- 1/4 #p_correct
a <- +1 #score of correct
b <- 0 #score of incorrect
n <- 44
E_new <- (p*a + (1-p)*b)*n
E_new
### suppose a range of correct answer probabilities p <- seq(0.25, 0.95, 0.05) showing a range of student skills.
# what is the lowest p that the probability of scoring over 35 exceeds 80%?
B <- 10000
S_func <- function(P){
S <- replicate(B,{
X <- sample(c(+1,0),n,replace = TRUE,prob=c(P,1-P))
sum(X)
})
}
### suppose a range of correct answer probabilities p <- seq(0.25, 0.95, 0.05) showing a range of student skills.
# what is the lowest p that the probability of scoring over 35 exceeds 80%?
B <- 10000
S_func <- function(P){
S <- replicate(B,{
X <- sample(c(+1,0),n,replace = TRUE,prob=c(P,1-P))
sum(X)
})
}
P = seq(0.25,0.95,0.05)
sapply(P,S_func)
### suppose a range of correct answer probabilities p <- seq(0.25, 0.95, 0.05) showing a range of student skills.
# what is the lowest p that the probability of scoring over 35 exceeds 80%?
B <- 10000
S_func <- function(P){
S <- replicate(B,{
X <- sample(c(+1,0),n,replace = TRUE,prob=c(P,1-P))
sum(X)
})
}
P = seq(0.25,0.95,0.05)
sapply(S_func,P)
### suppose a range of correct answer probabilities p <- seq(0.25, 0.95, 0.05) showing a range of student skills.
# what is the lowest p that the probability of scoring over 35 exceeds 80%?
B <- 10000
S_func <- function(P){
S <- replicate(B,{
X <- sample(c(+1,0),n,replace = TRUE,prob=c(P,1-P))
sum(X)
})
}
P <- seq(0.25,0.95,0.05)
sapply(S_func,P)
### suppose a range of correct answer probabilities p <- seq(0.25, 0.95, 0.05) showing a range of student skills.
# what is the lowest p that the probability of scoring over 35 exceeds 80%?
B <- 10000
S_func <- function(P){
S <- replicate(B,{
X <- sample(c(+1,0),n,replace = TRUE,prob=c(P,1-P))
sum(X)
})
}
s_func (6)
### suppose a range of correct answer probabilities p <- seq(0.25, 0.95, 0.05) showing a range of student skills.
# what is the lowest p that the probability of scoring over 35 exceeds 80%?
B <- 10000
S_func <- function(P){
S <- replicate(B,{
X <- sample(c(+1,0),n,replace = TRUE,prob=c(P,1-P))
sum(X)
})
}
S_func (6)
### suppose a range of correct answer probabilities p <- seq(0.25, 0.95, 0.05) showing a range of student skills.
# what is the lowest p that the probability of scoring over 35 exceeds 80%?
B <- 10000
n <- 44
S_func <- function(P){
S <- replicate(B,{
X <- sample(c(+1,0),n,replace = TRUE,prob=c(P,1-P))
sum(X)
})
}
S_func (6)
### suppose a range of correct answer probabilities p <- seq(0.25, 0.95, 0.05) showing a range of student skills.
# what is the lowest p that the probability of scoring over 35 exceeds 80%?
B <- 10000
n <- 44
S_func <- function(P){
S <- replicate(B,{
X <- sample(c(+1,0),n,replace = TRUE,prob=c(P,1-P))
sum(X)
})
}
S_func (0.6)
### suppose a range of correct answer probabilities p <- seq(0.25, 0.95, 0.05) showing a range of student skills.
# what is the lowest p that the probability of scoring over 35 exceeds 80%?
B <- 10000
n <- 44
S_func <- function(P){
S <- replicate(B,{
X <- sample(c(+1,0),n,replace = TRUE,prob=c(P,1-P))
sum(X)
})
}
S_func (0.6)
### suppose a range of correct answer probabilities p <- seq(0.25, 0.95, 0.05) showing a range of student skills.
# what is the lowest p that the probability of scoring over 35 exceeds 80%?
B <- 10000
n <- 44
S_func <- function(P){
S <- replicate(B,{
X <- sample(c(+1,0),n,replace = TRUE,prob=c(P,1-P))
sum(X)
})
}
P <- seq(0.25,0.95,0.05)
sapply(S_func , P)
### suppose a range of correct answer probabilities p <- seq(0.25, 0.95, 0.05) showing a range of student skills.
# what is the lowest p that the probability of scoring over 35 exceeds 80%?
B <- 10000
n <- 44
S_func <- function(P){
S <- replicate(B,{
X <- sample(c(+1,0),n,replace = TRUE,prob=c(P,1-P))
sum(X)
})
}
p <- seq(0.25,0.95,0.05)
sapply(S_func , p)
### suppose a range of correct answer probabilities p <- seq(0.25, 0.95, 0.05) showing a range of student skills.
# what is the lowest p that the probability of scoring over 35 exceeds 80%?
B <- 10000
n <- 44
S_func <- function(P){
S <- replicate(B,{
X <- sample(c(+1,0),n,replace = TRUE,prob=c(P,1-P))
sum(X)
})
}
sapply(seq(0.25,0.95,0.05),S_func)
### suppose a range of correct answer probabilities p <- seq(0.25, 0.95, 0.05) showing a range of student skills.
# what is the lowest p that the probability of scoring over 35 exceeds 80%?
B <- 10000
n <- 44
S_func <- function(P){
S <- replicate(B,{
X <- sample(c(+1,0),n,replace = TRUE,prob=c(P,1-P))
sum(X)
})
}
S_func_sapply <- sapply(seq(0.25,0.95,0.05),S_func)
### suppose a range of correct answer probabilities p <- seq(0.25, 0.95, 0.05) showing a range of student skills.
# what is the lowest p that the probability of scoring over 35 exceeds 80%?
set.seed(21, sample.kind = "Rounding")
B <- 10000
n <- 44
S_func <- function(P){
S <- replicate(B,{
X <- sample(c(+1,0),n,replace = TRUE,prob=c(P,1-P))
sum(X)
})
}
S_func_sapply <- sapply(seq(0.25,0.95,0.05),S_func)
plot()
### suppose a range of correct answer probabilities p <- seq(0.25, 0.95, 0.05) showing a range of student skills.
# what is the lowest p that the probability of scoring over 35 exceeds 80%?
set.seed(21, sample.kind = "Rounding")
B <- 10000
n <- 44
S_func <- function(P){
S <- replicate(B,{
X <- sample(c(+1,0),n,replace = TRUE,prob=c(P,1-P))
sum(X)
})
}
S_func_sapply <- sapply(seq(0.25,0.95,0.05),S_func)
plot(seq(0.25,0.95,0.05),S_func_sapply)
### suppose a range of correct answer probabilities p <- seq(0.25, 0.95, 0.05) showing a range of student skills.
# what is the lowest p that the probability of scoring over 35 exceeds 80%?
set.seed(21, sample.kind = "Rounding")
B <- 10000
n <- 44
S_func <- function(P){
S <- replicate(B,{
X <- sample(c(+1,0),n,replace = TRUE,prob=c(P,1-P))
sum(X)
})
}
x <- seq(0.25,0.95,0.05)
S_func_sapply <- sapply(x,S_func)
plot(x,S_func_sapply)
S_func_sapply <- sapply(x,S_func)
### suppose a range of correct answer probabilities p <- seq(0.25, 0.95, 0.05) showing a range of student skills.
# what is the lowest p that the probability of scoring over 35 exceeds 80%?
p <- seq(0.25, 0.95, 0.05)
a <- +1
b <- 0
n <- 44
S_func <- function(p){
ev <- (p*a + (1-p)*b)*n
se <- sqrt(n)*abs(b-a)*sqrt(p*(1-p))
pnorm(35,ex,se)
}
View(S_func)
### suppose a range of correct answer probabilities p <- seq(0.25, 0.95, 0.05) showing a range of student skills.
# what is the lowest p that the probability of scoring over 35 exceeds 80%?
a <- +1
b <- 0
n <- 44
S_func <- function(p){
ev <- (p*a + (1-p)*b)*n
se <- sqrt(n)*abs(b-a)*sqrt(p*(1-p))
pnorm(35,ex,se)
}
p <- seq(0.25, 0.95, 0.05)
sapply(p,S_func)
### suppose a range of correct answer probabilities p <- seq(0.25, 0.95, 0.05) showing a range of student skills.
# what is the lowest p that the probability of scoring over 35 exceeds 80%?
a <- +1
b <- 0
n <- 44
S_func <- function(p){
ev <- (p*a + (1-p)*b)*n
se <- sqrt(n)*abs(b-a)*sqrt(p*(1-p))
pnorm(35,ev,se)
}
p <- seq(0.25, 0.95, 0.05)
sapply(p,S_func)
### suppose a range of correct answer probabilities p <- seq(0.25, 0.95, 0.05) showing a range of student skills.
# what is the lowest p that the probability of scoring over 35 exceeds 80%?
a <- +1
b <- 0
n <- 44
S_func <- function(p){
ev <- (p*a + (1-p)*b)*n
se <- sqrt(n)*abs(b-a)*sqrt(p*(1-p))
pnorm(35,ev,se)
}
p <- seq(0.25, 0.95, 0.05)
prob_35 <- sapply(p,S_func)
data.frame(p,prob_35) %>%
filter(prov_35>0.08)
### suppose a range of correct answer probabilities p <- seq(0.25, 0.95, 0.05) showing a range of student skills.
# what is the lowest p that the probability of scoring over 35 exceeds 80%?
a <- +1
b <- 0
n <- 44
S_func <- function(p){
ev <- (p*a + (1-p)*b)*n
se <- sqrt(n)*abs(b-a)*sqrt(p*(1-p))
pnorm(35,ev,se)
}
p <- seq(0.25, 0.95, 0.05)
prob_35 <- sapply(p,S_func)
data.frame(p,prob_35) %>% filter(prov_35>0.08)
### suppose a range of correct answer probabilities p <- seq(0.25, 0.95, 0.05) showing a range of student skills.
# what is the lowest p that the probability of scoring over 35 exceeds 80%?
libarary(tidyverse)
### suppose a range of correct answer probabilities p <- seq(0.25, 0.95, 0.05) showing a range of student skills.
# what is the lowest p that the probability of scoring over 35 exceeds 80%?
library(tidyverse)
a <- +1
b <- 0
n <- 44
S_func <- function(p){
ev <- (p*a + (1-p)*b)*n
se <- sqrt(n)*abs(b-a)*sqrt(p*(1-p))
pnorm(35,ev,se)
}
p <- seq(0.25, 0.95, 0.05)
prob_35 <- sapply(p,S_func)
data.frame(p,prob_35) %>% filter(prov_35>0.08)
### suppose a range of correct answer probabilities p <- seq(0.25, 0.95, 0.05) showing a range of student skills.
# what is the lowest p that the probability of scoring over 35 exceeds 80%?
library(tidyverse)
a <- +1
b <- 0
n <- 44
S_func <- function(p){
ev <- (p*a + (1-p)*b)*n
se <- sqrt(n)*abs(b-a)*sqrt(p*(1-p))
pnorm(35,ev,se)
}
p <- seq(0.25, 0.95, 0.05)
prob_35 <- sapply(p,S_func)
data.frame(p,prob_35) %>% filter(prob_35>0.08)
### suppose a range of correct answer probabilities p <- seq(0.25, 0.95, 0.05) showing a range of student skills.
# what is the lowest p that the probability of scoring over 35 exceeds 80%?
library(tidyverse)
a <- +1
b <- 0
n <- 44
S_func <- function(p){
ev <- (p*a + (1-p)*b)*n
se <- sqrt(n)*abs(b-a)*sqrt(p*(1-p))
pnorm(35,ev,se)
}
p <- seq(0.25, 0.95, 0.05)
prob_35 <- sapply(p,S_func)
data.frame(p,prob_35) %>% filter(prob_35>=0.08)
### suppose a range of correct answer probabilities p <- seq(0.25, 0.95, 0.05) showing a range of student skills.
# what is the lowest p that the probability of scoring over 35 exceeds 80%?
library(tidyverse)
a <- +1
b <- 0
n <- 44
S_func <- function(p){
ev <- (p*a + (1-p)*b)*n
se <- sqrt(n)*abs(b-a)*sqrt(p*(1-p))
pnorm(35,ev,se)
}
p <- seq(0.25, 0.95, 0.05)
prob_35 <- sapply(p,S_func)
data.frame(p,prob_35) %>% summarise(p,min(prob_35>=0.08))
### suppose a range of correct answer probabilities p <- seq(0.25, 0.95, 0.05) showing a range of student skills.
# what is the lowest p that the probability of scoring over 35 exceeds 80%?
library(tidyverse)
a <- +1
b <- 0
n <- 44
S_func <- function(p){
ev <- (p*a + (1-p)*b)*n
se <- sqrt(n)*abs(b-a)*sqrt(p*(1-p))
pnorm(35,ev,se)
}
p <- seq(0.25, 0.95, 0.05)
prob_35 <- sapply(p,S_func)
data.frame(p,prob_35) %>% filter(prob_35>=0.08)
### suppose a range of correct answer probabilities p <- seq(0.25, 0.95, 0.05) showing a range of student skills.
# what is the lowest p that the probability of scoring over 35 exceeds 80%?
library(tidyverse)
a <- +1
b <- 0
n <- 44
S_func <- function(p){
ev <- (p*a + (1-p)*b)*n
se <- sqrt(n)*abs(b-a)*sqrt(p*(1-p))
pnorm(35,ev,se)
}
p <- seq(0.25, 0.95, 0.05)
prob_35 <- sapply(p,S_func)
data.frame(p,prob_35)
p <- seq(0.25, 0.95, 0.05)
p <- seq(0.25, 0.95, 0.05)
prob_35 <- sapply(p,S_func)
data.frame(p,prob_35)
### suppose a range of correct answer probabilities p <- seq(0.25, 0.95, 0.05) showing a range of student skills.
# what is the lowest p that the probability of scoring over 35 exceeds 80%?
library(tidyverse)
a <- +1
b <- 0
n <- 44
S_func <- function(p){
ev <- (p*a + (1-p)*b)*n
se <- sqrt(n)*abs(b-a)*sqrt(p*(1-p))
1-pnorm(35,ev,se)
}
p <- seq(0.25, 0.95, 0.05)
prob_35 <- sapply(p,S_func)
data.frame(p,prob_35)
### suppose a range of correct answer probabilities p <- seq(0.25, 0.95, 0.05) showing a range of student skills.
# what is the lowest p that the probability of scoring over 35 exceeds 80%?
library(tidyverse)
a <- +1
b <- 0
n <- 44
S_func <- function(p){
ev <- (p*a + (1-p)*b)*n
se <- sqrt(n)*abs(b-a)*sqrt(p*(1-p))
1-pnorm(35,ev,se)
}
p <- seq(0.25, 0.95, 0.05)
prob_35 <- sapply(p,S_func)
data.frame(p,prob_35) %>% filter(prob_35>0.08)
### suppose a range of correct answer probabilities p <- seq(0.25, 0.95, 0.05) showing a range of student skills.
# what is the lowest p that the probability of scoring over 35 exceeds 80%?
library(tidyverse)
a <- +1
b <- 0
n <- 44
S_func <- function(p){
ev <- (p*a + (1-p)*b)*n
se <- sqrt(n)*abs(b-a)*sqrt(p*(1-p))
1-pnorm(35,ev,se)
}
p <- seq(0.25, 0.95, 0.05)
prob_35 <- sapply(p,S_func)
data.frame(p,prob_35) %>% filter(prob_35>0.8)
min(p[which(prob_35 > 0.8)])
### suppose a range of correct answer probabilities p <- seq(0.25, 0.95, 0.05) showing a range of student skills.
# what is the lowest p that the probability of scoring over 35 exceeds 80%?
library(tidyverse)
a <- +1
b <- 0
n <- 44
S_func <- function(p){
ev <- (p*a + (1-p)*b)*n
se <- sqrt(n)*abs(b-a)*sqrt(p*(1-p))
1-pnorm(35,ev,se)
}
p <- seq(0.25, 0.95, 0.05)
prob_35 <- sapply(p,S_func)
#data.frame(p,prob_35) %>% filter(prob_35>0.8)
min(p[which(prob_35 > 0.8)])
### what is the chance of loosing?
a <- +6 #winning ($)
b <- -1 #loosing ($)
p_win <- 1/38
p_los <- 4/38
n <- 500
### what is the expected value of payout for one bet?
exp_v <- n*(a*p_win + b*p_los)
exp_v
### what is the chance of loosing?
a <- +6 #winning ($)
b <- -1 #loosing ($)
p_win <- 1/38
p_los <- 4/38
n <- 500
### what is the expected value of payout for one bet?
exp_v <- (a*p_win + b*p_los)
exp_v
### what is the chance of loosing?
a <- +6 #winning ($)
b <- -1 #loosing ($)
p_win <- 1/38
p_los <- 4/38
n <- 500
### what is the expected value of payout for one bet?
exp_v <- (a*p_win + b*p_los)
exp_v
### what is thestandard error of payout for one bet?
se <- abs(b-a)*sqrt(p*(1-p))
se
### what is the chance of loosing?
a <- +6 #winning ($)
b <- -1 #loosing ($)
p_win <- 1/38
p_los <- 4/38
n <- 500
### what is the expected value of payout for one bet?
exp_v <- (a*p_win + b*p_los)
exp_v
### what is thestandard error of payout for one bet?
se <- abs(b-a)*sqrt(p_win *(1-p_los))
se
### what is the chance of loosing?
a <- +6 #winning ($)
b <- -1 #loosing ($)
p_win <- 1/38
p_los <- 4/38
n <- 500
### what is the expected value of payout for one bet?
exp_v <- (a*p_win + b*p_los)
exp_v
### what is thestandard error of payout for one bet?
se <- abs(b-a)*sqrt(p_win *(1-p_los))
se
### what is the chance of loosing?
a <- +6 #winning ($)
b <- -1 #loosing ($)
p_win <- 1/38
p_los <- 1-p_win
n <- 500
### what is the expected value of payout for one bet?
exp_v <- (a*p_win + b*p_los)
exp_v
### what is thestandard error of payout for one bet?
se <- abs(b-a)*sqrt(p_win *(1-p_los))
se
### what is the chance of loosing?
a <- +6 #winning ($)
b <- -1 #loosing ($)
p_win <- 1/38
p_los <- 4/38
n <- 500
### what is the expected value of payout for one bet?
exp_v <- (a*p_win + b*p_los)
exp_v
### what is thestandard error of payout for one bet?
se <- abs(b-a)*sqrt(p_win *(1-p_los))
se
### what is the chance of loosing?
a <- +6 #winning ($)
b <- -1 #loosing ($)
p <- 5/38
n <- 500
### what is the expected value of payout for one bet?
exp_v <- (a*p + b*(1-p))
exp_v
### what is thestandard error of payout for one bet?
se <- abs(b-a)*sqrt(p_win *(1-p_los))
se
### what is the chance of loosing?
a <- +6 #winning ($)
b <- -1 #loosing ($)
p <- 5/38
n <- 500
### what is the expected value of payout for one bet?
exp_v <- (a*p + b*(1-p))
exp_v
### what is thestandard error of payout for one bet?
se <- abs(b-a)*sqrt(p *(1-p))
se
exp_v * n
exp_v <- (a*p + b*(1-p))
exp_v
se /(sqrt(n))
n * se
n * exp_v
sqrt(n)*se
pnorm(0, n * exp_v,sqrt(n)*se)
